[{"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\index.js":"1","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\serviceWorker.js":"2","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\App.js":"3","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Redux\\Reducer.js":"4","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Topbar\\Topbar.js":"5","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Login\\Login.js":"6","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\DashBoard\\Dashboard.js":"7","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Products\\Product.js":"8","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Footer\\Footer.js":"9","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\AccountPage\\AccountList.js":"10","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\ProductLeft\\AddNewProduct\\AddNewProduct.js":"11","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\AccountPage\\ChangeAvatar.js":"12","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\ProductLeft\\ProductLeft.js":"13","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\AccountPage\\AccountSettings.js":"14","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\LineChart\\LineChart.js":"15","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\PieChart\\PieChart.js":"16","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\BarChart\\BarChart.js":"17","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\Notifications\\Notifications.js":"18","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\Orders\\Order.js":"19","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\Category\\Category.js":"20"},{"size":795,"mtime":1686459662890,"results":"21","hashOfConfig":"22"},{"size":5086,"mtime":1686459663066,"results":"23","hashOfConfig":"22"},{"size":3181,"mtime":1686459662684,"results":"24","hashOfConfig":"22"},{"size":650,"mtime":1686459665987,"results":"25","hashOfConfig":"22"},{"size":3998,"mtime":1686459665824,"results":"26","hashOfConfig":"22"},{"size":4718,"mtime":1686460431119,"results":"27","hashOfConfig":"22"},{"size":1355,"mtime":1686459665396,"results":"28","hashOfConfig":"22"},{"size":941,"mtime":1686459665702,"results":"29","hashOfConfig":"22"},{"size":618,"mtime":1686460084509,"results":"30","hashOfConfig":"22"},{"size":2378,"mtime":1686459664874,"results":"31","hashOfConfig":"22"},{"size":9776,"mtime":1686459664646,"results":"32","hashOfConfig":"22"},{"size":3844,"mtime":1686460488446,"results":"33","hashOfConfig":"22"},{"size":4248,"mtime":1686459664523,"results":"34","hashOfConfig":"22"},{"size":5319,"mtime":1686460636822,"results":"35","hashOfConfig":"22"},{"size":2524,"mtime":1686459663920,"results":"36","hashOfConfig":"22"},{"size":1338,"mtime":1686459664412,"results":"37","hashOfConfig":"22"},{"size":2053,"mtime":1686459663540,"results":"38","hashOfConfig":"22"},{"size":1268,"mtime":1686459664126,"results":"39","hashOfConfig":"22"},{"size":2433,"mtime":1686459664207,"results":"40","hashOfConfig":"22"},{"size":1826,"mtime":1686459663777,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1miuamz",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\index.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\serviceWorker.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\App.js",["110"],[],"import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\n\nimport React, { Component } from \"react\";\nimport Topbar from \"./Containers/Topbar/Topbar\";\nimport { BrowserRouter, Route, Link, Redirect, Switch } from \"react-router-dom\";\nimport Login from \"./Containers/Login/Login\";\nimport Dashboard from \"./Containers/DashBoard/Dashboard\";\nimport Product from \"./Containers/Products/Product\";\nimport AddNewProduct from \"./Component/ProductLeft/AddNewProduct/AddNewProduct\";\nimport AccountPage from \"./Containers/AccountPage/AccountList\";\nimport Footer from \"./Containers/Footer/Footer\";\n\nclass App extends Component {\n  state = {\n    accountData: {},\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://reactmusicplayer-ab9e4.firebaseio.com/project-data.json\")\n      .then((response) => {\n        let accountdata = response.data;\n        let ProductList = accountdata[\"productsPage\"][\"products\"];\n        let modify = ProductList.map((item, index) => {\n          return { ...item, ProductId: `PML000${index}`, isChecked: false };\n        });\n        accountdata[\"productsPage\"][\"products\"] = modify;\n\n        let CategoriesList = accountdata[\"productsPage\"][\"categories\"];\n        let Categoriesmodify = CategoriesList.map((item, index) => {\n          return { item, ProductId: `PRD000${index}` };\n        });\n        console.log(CategoriesList);\n        accountdata[\"productsPage\"][\"categories\"] = Categoriesmodify;\n        this.setState({\n          data: accountdata,\n        });\n        localStorage.setItem(\"accountdata\", JSON.stringify(this.state.data));\n        //   this.setState({accountData:{...response.data}})\n        //  localStorage.setItem(\"accountdata\",JSON.stringify(response.data))\n        //    console.log(this.state.accountData);\n      })\n      .catch((err) => {\n        console.log(\"API call failed\");\n      });\n  }\n  render() {\n    //  console.log( this.props.loggedInStatus);\n    return (\n      <div>\n        <BrowserRouter>\n          <Topbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() =>\n                this.props.onUserLoggedIn ? (\n                  <Redirect to=\"/dashboard\" />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                !this.props.onUserLoggedIn ? (\n                  <Login {...props} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/product\" component={Product} />\n            <Route exact path=\"/product/addnew\" component={AddNewProduct} />\n            <Route exact path=\"/Homeaccount\" component={AccountPage} />\n          </Switch>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n// to get the logged in status\nconst mapStateToProps = (globalState) => {\n  return {\n    onUserLoggedIn: globalState.loggedInStatus,\n  };\n};\nexport default connect(mapStateToProps)(App);\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Redux\\Reducer.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Topbar\\Topbar.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Login\\Login.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\DashBoard\\Dashboard.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Products\\Product.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\Footer\\Footer.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\AccountPage\\AccountList.js",["111"],[],"import React, { Component } from \"react\";\nimport classes from \"./AccountList.module.css\";\nimport ChangeAvatar from \"./ChangeAvatar\";\nimport AccountSettings from \"./AccountSettings\";\nclass AccountList extends Component {\n  state = {\n    Accountkeys: {},\n    Accountvalue: \"\",\n  };\n  handlechange = (e) => {\n    this.state.Accountvalue = e.target.value;\n\n    if (this.state.Accountvalue === \"\") {\n      this.setState({\n        Accountkeys: {\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          profilePic: \"\",\n          password: \"\",\n        },\n        Accountvalue: this.state.Accountvalue,\n      });\n    } else {\n      let acctlist =\n        localStorage.getItem(\"accountdata\") === null\n          ? []\n          : JSON.parse(localStorage.getItem(\"accountdata\"));\n      let acctdata = acctlist[\"accountsPage\"]; // list accountpage data\n      let Accountkeys = acctdata[this.state.Accountvalue]; // Selected dropdown account id data\n\n      this.setState({\n        Accountkeys: Accountkeys,\n        Accountvalue: this.state.Accountvalue,\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className={classes.tm_bg_primary_dark}>\n                <h2 className={classes.tm_block_title}>List of Accounts</h2>\n                <p className={classes.text_white}>Accounts</p>\n                <select\n                  className={classes.custom_select}\n                  onChange={this.handlechange}\n                >\n                  <option value=\"\"> Select account</option>\n                  <option value=\"Admin\">Admin</option>\n                  <option value=\"Editor\">Editor</option>\n                  <option value=\"Merchant\">Merchant</option>\n                  <option value=\"Customer\">Customer</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div className={classes.tm_content_row}>\n            <ChangeAvatar\n              ChangeAvatar={this.state.Accountkeys}\n              Accountvalue={this.state.Accountvalue}\n            />\n            <AccountSettings\n              AccountSettings={this.state.Accountkeys}\n              Accountvalue={this.state.Accountvalue}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccountList;\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\ProductLeft\\AddNewProduct\\AddNewProduct.js",["112","113","114"],[],"import React, { Component } from \"react\";\nimport classes from \"./AddNewProduct.module.css\";\nimport { Link } from \"react-router-dom\";\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&’+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)$/\n);\nclass AddnewProduct extends Component {\n  fileInput = React.createRef();\n  cloudIcon = React.createRef();\n  state = {\n    name: \"\",\n    description: \"\",\n    category: \"\",\n    stock: \"\",\n    unitSold: \"\",\n    expireDate: \"\",\n    accid: \"\",\n    imgUrl: \"\",\n    iconDisplay: true,\n  };\n\n  makeid = () => {\n    let length = 8;\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n  handlechange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  addProductFormValidation() {\n    let flag = true;\n    if (\n      (this.state.name === \"\",\n      this.state.description === \"\",\n      this.state.category === \"\",\n      this.state.stock === \"\",\n      this.state.unitSold === \"\",\n      this.state.expireDate === \"\")\n    ) {\n      flag = false;\n    }\n    return flag;\n  }\n  adminupdate = (e) => {\n    e.preventDefault();\n    let isValidate = this.addProductFormValidation();\n    if (isValidate === false) {\n      alert(\"Please fill in all the fields!\");\n      return false;\n    }\n    let acctlist =\n      localStorage.getItem(\"accountdata\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"accountdata\"));\n    let acctllistdata = acctlist[\"productsPage\"][\"products\"];\n    let acctdata = {\n      name: this.state.name,\n      description: this.state.description,\n      category: this.state.category,\n      stock: this.state.stock,\n      unitSold: this.state.unitSold,\n      expireDate: this.state.expireDate,\n      ProductId: this.makeid(),\n    };\n    acctllistdata.push(acctdata);\n    acctlist[\"productsPage\"][\"products\"] = acctllistdata;\n    localStorage.setItem(\"accountdata\", JSON.stringify(acctlist));\n    this.setState({\n      name: \"\",\n      description: \"\",\n      category: \"\",\n      stock: \"\",\n      unitSold: \"\",\n      expireDate: \"\",\n    });\n    let path = `/product`;\n    this.props.history.push(path);\n  };\n\n  fireInputOnClick = () => {\n    this.fileInput.current.click();\n    this.setState({ iconDisplay: false });\n  };\n\n  handleFileInput = (e) => {\n    const fileSize = Math.round(e.target.files[0].size / 800);\n    if (fileSize > 1) {\n      alert(\"File size can't be more than 1 MB\");\n      this.setState({ iconDisplay: true });\n      return;\n    }\n    const imgurl = URL.createObjectURL(e.target.files[0]);\n    this.setState({ imgUrl: imgurl });\n  };\n\n  render() {\n    return (\n      <div className={[\"container\"]}>\n        <div className={[\"row\"]}>\n          <div\n            className={[\n              \"col-xl-9\",\n              \"col-lg-10\",\n              \"col-md-12\",\n              \"col-sm-12\",\n              \"mx-auto\",\n            ].join(\" \")}\n          >\n            <div className={classes.tm_bg_primary_dark}>\n              <div className={[\"row\"]}>\n                <div className={[\"col-12\"]}>\n                  <h2 className={classes.tm_block_title}>Add Product</h2>\n                </div>\n              </div>\n              <div className={[\"row\"]}>\n                <div\n                  className={[\"col-xl-6\", \"col-lg-6\", \"col-md-12\"].join(\" \")}\n                >\n                  <form action=\"\" className={classes.tm_edit_product_form}>\n                    <div className={[\"form-group\", \"mb-3\"].join(\" \")}>\n                      <label htmlFor=\"name\">Product Name</label>\n                      <input\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        className={[\"form-control\"]}\n                        onChange={this.handlechange}\n                        required=\"\"\n                      />\n                    </div>\n                    <div className={[\"form-group\", \"mb-3\"].join(\" \")}>\n                      <label htmlFor=\"description\">Description</label>\n                      <textarea\n                        className={[\"form-control\"]}\n                        name=\"description\"\n                        rows=\"3\"\n                        required=\"\"\n                        onChange={this.handlechange}\n                      ></textarea>\n                    </div>\n                    <div className={[\"form-group\", \"mb-3\"].join(\" \")}>\n                      <label htmlFor=\"category\">Category</label>\n                      <select\n                        className=\"custom-select tm-select-accounts\"\n                        name=\"category\"\n                        id=\"category\"\n                        onChange={this.handlechange}\n                      >\n                        <option defaultValue=\"\">Select category</option>\n                        <option value=\"New Arrival\">New Arrival</option>\n                        <option value=\"Most Popular\">Most Popular</option>\n                        <option value=\"Trending\">Trending</option>\n                      </select>\n                    </div>\n                    <div className=\"row\">\n                      <div\n                        className={[\n                          \"form-group\",\n                          \"mb-3\",\n                          \"col-xs-12\",\n                          \"col-sm-6\",\n                        ].join(\" \")}\n                      >\n                        <label htmlFor=\"expire_date\">Expire Date</label>\n                        {\n                          <input\n                            id=\"expire_date\"\n                            name=\"expireDate\"\n                            type=\"date\"\n                            className={[\n                              \"form-control\",\n                              \"validate\",\n                              \"hasDatepicker\",\n                            ].join(\" \")}\n                            data-large-mode=\"true\"\n                            onChange={this.handlechange}\n                          />\n                        }\n                      </div>\n                      <div\n                        className={[\n                          \"form-group\",\n                          \"mb-3\",\n                          \"col-xs-12\",\n                          \"col-sm-6\",\n                        ].join(\" \")}\n                      >\n                        <label htmlFor=\"stock\">Units In Stock</label>\n                        <input\n                          id=\"stock\"\n                          name=\"stock\"\n                          type=\"number\"\n                          className={[\n                            \"form-control\",\n                            \"validate\",\n                            \"hasDatepicker\",\n                          ].join(\" \")}\n                          required=\"\"\n                          onChange={this.handlechange}\n                        />\n                      </div>\n                      <div\n                        className={[\n                          \"form-group\",\n                          \"mb-3\",\n                          \"col-xs-12\",\n                          \"col-sm-6\",\n                        ].join(\" \")}\n                      >\n                        <label htmlFor=\"stock\">Unit Sold</label>\n                        <input\n                          id=\"stock\"\n                          name=\"unitSold\"\n                          type=\"number\"\n                          className={[\n                            \"form-control\",\n                            \"validate\",\n                            \"hasDatepicker\",\n                          ].join(\" \")}\n                          required=\"\"\n                          onChange={this.handlechange}\n                        />\n                      </div>\n                    </div>\n                  </form>\n                </div>\n\n                <div\n                  className={[\"col-xl-6\", \"col-lg-6\", \"col-md-12\"].join(\" \")}\n                >\n                  <div className={classes.tm_product_img_dummy}>\n                    <i\n                      className={\n                        this.state.iconDisplay\n                          ? [\n                              \"fas\",\n                              \"fa-cloud-upload-alt\",\n                              \"tm-upload-icon\",\n                            ].join(\" \")\n                          : [\"hideIcon\"]\n                      }\n                    ></i>\n                    <img src={this.state.imgUrl} className={[\"img-fluid\"]} />\n                  </div>\n                  <div className={[\"custom-file\", \"mt-3\", \"mb-3\"].join(\" \")}>\n                    <input\n                      type=\"file\"\n                      hidden\n                      ref={this.fileInput}\n                      onChange={this.handleFileInput}\n                    />\n                    <button\n                      type=\"button\"\n                      className={[\"button\"]}\n                      value=\"UPLOAD PRODUCT IMAGE\"\n                      onClick={this.fireInputOnClick}\n                    >\n                      UPLOAD PRODUCT IMAGE\n                    </button>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <button\n                    type=\"submit\"\n                    className={[\"button\"]}\n                    onClick={this.adminupdate}\n                  >\n                    Add Product Now\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddnewProduct;\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\AccountPage\\ChangeAvatar.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\ProductLeft\\ProductLeft.js",["115","116","117","118"],[],"import React, { Component } from \"react\";\nimport classes from \"./ProductLeft.module.css\";\nimport { Link } from \"react-router-dom\";\nexport class ProductLeft extends Component {\n  state = {\n    ProductList: [],\n    isChecked: false,\n  };\n  componentDidUpdate(oldProps) {\n    if (oldProps.ProductList !== this.props.ProductList) {\n      this.setState({\n        ProductList: this.props.ProductList,\n      });\n    }\n  }\n  getProductList = () => {\n    let productDat = this.state.ProductList.map((item) => {\n      return this.displayProducts(item);\n    });\n\n    return productDat;\n  };\n\n  uncheckAllProducts = (e) => {\n    var checkboxes = new Array();\n    checkboxes = document.querySelectorAll(\"input[type=checkbox]:checked\");\n\n    for (var i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].type == \"checkbox\") {\n        checkboxes[i].checked = false;\n      }\n    }\n\n    return true;\n  };\n  deletselectproduct = (e) => {\n    var selectedProducts = [];\n    var checkboxes = document.querySelectorAll(\"input[type=checkbox]:checked\");\n    console.log(checkboxes);\n    for (let i = 0; i < checkboxes.length; i++) {\n      selectedProducts.push(checkboxes[i].value);\n    }\n\n    if (selectedProducts.length > 0) {\n      let filterdata = [];\n      let ProductList = this.state.ProductList;\n\n      ProductList.map((item) => {\n        if (selectedProducts.indexOf(item.ProductId) === -1) {\n          filterdata.push(item);\n        }\n      });\n      let acctdata = JSON.parse(localStorage.getItem(\"accountdata\"));\n      acctdata[\"productsPage\"][\"products\"] = filterdata;\n\n      localStorage.setItem(\"accountdata\", JSON.stringify(acctdata));\n\n      this.setState({\n        ProductList: filterdata,\n        isChecked: !this.state.isChecked,\n      });\n      this.uncheckAllProducts();\n      return true;\n    }\n  };\n  productdelet = (productdata) => {\n    let ProductList = this.state.ProductList;\n    let filterdata = ProductList.filter(\n      (item) => item.ProductId !== productdata\n    );\n    let acctdata = JSON.parse(localStorage.getItem(\"accountdata\"));\n    acctdata[\"productsPage\"][\"products\"] = filterdata;\n    localStorage.setItem(\"accountdata\", JSON.stringify(acctdata));\n    this.setState({\n      ProductList: filterdata,\n    });\n  };\n  displayProducts = (data) => {\n    return (\n      <tr className={classes.thead}>\n        <th className={classes.thspc}>\n          <input type=\"checkbox\" value={data.ProductId} />{\" \"}\n        </th>\n        <td className={classes.tm_product_name}>{data.name}</td>\n        <td>{data.unitSold}</td>\n        <td>{data.stock}</td>\n        <td>{data.expireDate}</td>\n        <td>\n          <a\n            href=\"#\"\n            onClick={() => this.productdelet(data.ProductId)}\n            className={classes.tm_product_delete_link}\n          >\n            <i\n              className={[\n                \"far\",\n                \"fa-trash-alt\",\n                classes.tm_product_delete_icon,\n              ].join(\" \")}\n            ></i>\n          </a>\n        </td>\n      </tr>\n    );\n  };\n  render() {\n    return (\n      <div className=\"col-sm-12 col-md-12 col-lg-8 col-xl-8 tm-block-col\">\n        <div className=\"tm-bg-primary-dark tm-block tm-block-products\">\n          <div className=\"tm-product-table-container\">\n            <table className=\"table table-hover tm-table-small tm-product-table \">\n              <thead>\n                <tr>\n                  <th scope=\"col\">&nbsp;</th>\n                  <th scope=\"col\">PRODUCT NAME</th>\n                  <th scope=\"col\">UNIT SOLD</th>\n                  <th scope=\"col\">IN STOCK</th>\n                  <th scope=\"col\">EXPIRE DATE</th>\n                  <th scope=\"col\">&nbsp;</th>\n                </tr>\n              </thead>\n              <tbody>{this.getProductList()}</tbody>\n            </table>\n          </div>\n\n          <Link\n            to=\"/product/addnew\"\n            className=\"btn btn-primary btn-block text-uppercase mb-3\"\n          >\n            Add new product\n          </Link>\n          <button\n            className=\"btn btn-primary btn-block text-uppercase\"\n            onClick={this.deletselectproduct}\n          >\n            Delete selected products\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductLeft;\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Containers\\AccountPage\\AccountSettings.js",["119"],[],"import React, { Component } from \"react\";\nimport classes from \"./AccountSettings.module.css\";\n\nclass AccountSettings extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    Phone: \"\",\n    Accountvalue: \"\",\n  };\n  handlechange = (e) => {\n    // console.log(this.props.Accountvalue);\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n  shouldComponentUpdate(prevProps) {\n    let Accountvalue = this.props.Accountvalue;\n\n    // console.log(prevProps);\n    // console.log(Accountvalue);\n    if (prevProps.Accountvalue !== this.props.Accountvalue) {\n      this.setState({ name: \"\", email: \"\", password: \"\", Phone: \"\" });\n    }\n    if (typeof this.props.AccountSettings === \"undefined\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  accountupdate = (e) => {\n    e.preventDefault();\n    if (\n      this.state.name === \"\" ||\n      this.state.email === \"\" ||\n      this.state.password === \"\"\n    ) {\n      alert(\"please fill field\");\n      return false;\n    }\n\n    let acctlist =\n      localStorage.getItem(\"accountdata\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"accountdata\"));\n    let acctdata = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      phone: this.state.Phone,\n      profilePic:\n        acctlist[\"accountsPage\"][this.props.Accountvalue][\"profilePic\"],\n    };\n\n    acctlist[\"accountsPage\"][this.props.Accountvalue] = acctdata;\n    localStorage.setItem(\"accountdata\", JSON.stringify(acctlist));\n    //     this.setState({\n    //   name:'',\n    //   email:'',\n    //   password:'',\n    //   Phone:'',\n\n    // })\n  };\n  componentDidMount() {\n    let { email, name, password, phone } = this.props.AccountSettings;\n    this.setState({\n      name: name,\n      email: email,\n      password: password,\n      phone: phone,\n    });\n  }\n  render() {\n    let { email, name, password, phone } = this.props.AccountSettings;\n\n    return (\n      <div className={`${classes.tm_col_account_settings}`}>\n        <div className={classes.tm_bg_primary_dark}>\n          <h2 className={classes.tm_block_title}>Account Settings</h2>\n          <form action=\"\" className=\"row\">\n            <div className=\"form-group col-lg-6\">\n              <label htmlFor=\"name\" className={classes.accountsettinglabel}>\n                Account Name\n              </label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                className={classes.accountsettingform_control}\n                value={this.state.name ? this.state.name : name}\n                onChange={this.handlechange}\n              />\n            </div>\n            <div className=\"form-group col-lg-6\">\n              <label htmlFor=\"email\" className={classes.accountsettinglabel}>\n                Account Email\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                className={classes.accountsettingform_control}\n                value={this.state.email ? this.state.email : email}\n                onChange={this.handlechange}\n              />\n            </div>\n            <div className=\"form-group col-lg-6\">\n              <label htmlFor=\"password\" className={classes.accountsettinglabel}>\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                className={classes.accountsettingform_control}\n                value={this.state.password ? this.state.password : password}\n                onChange={this.handlechange}\n              />\n            </div>\n            <div className=\"form-group col-lg-6\">\n              <label\n                htmlFor=\"password2\"\n                className={classes.accountsettinglabel}\n              >\n                Re-enter Password\n              </label>\n              <input\n                id=\"password2\"\n                name=\"password2\"\n                type=\"password\"\n                className={classes.accountsettingform_control}\n              />\n            </div>\n            <div className=\"form-group col-lg-6\">\n              <label htmlFor=\"phone\" className={classes.accountsettinglabel}>\n                Phone\n              </label>\n              <input\n                id=\"phone\"\n                name=\"phone\"\n                type=\"tel\"\n                className={classes.accountsettingform_control}\n                value={this.state.phone ? this.state.phone : phone}\n                onChange={this.handlechange}\n              />\n            </div>\n            <div className=\"form-group col-lg-6\">\n              <label className=\"tm-hide-sm\">&nbsp;</label>\n              <button\n                type=\"submit\"\n                className={classes.btn_primary}\n                onClick={this.accountupdate}\n              >\n                Update Your Profile\n              </button>\n            </div>\n            <div className=\"col-12\">\n              <button type=\"submit\" className={classes.btn_primary}>\n                Delete Your Account\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AccountSettings;\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\LineChart\\LineChart.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\PieChart\\PieChart.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\BarChart\\BarChart.js",[],[],"C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\Notifications\\Notifications.js",["120"],[],"import \"./Notifications.css\";\nimport React, { Component } from \"react\";\n\nexport default class Notifications extends Component {\n  state = {\n    chartlinepage:\n      localStorage.getItem(\"accountdata\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"accountdata\")),\n  };\n\n  render() {\n    const notificationArr = this.state.chartlinepage[\"dasbhoardPage\"][\n      \"notifications\"\n    ];\n    const mapNotiArr = notificationArr.map((item) => {\n      return (\n        <div className=\"media tm-notification-item\">\n          <div className=\"tm-gray-circle\">\n            <img src={item.pic} alt=\"Avatar Image\" className=\"rounded-circle\" />\n          </div>\n          <div className=\"media-body\">\n            <p className=\"mb-2\">{item.message}</p>\n            <span className=\"tm-small tm-text-color-secondary\">\n              {item.time} ago.\n            </span>\n          </div>\n        </div>\n      );\n    });\n    return (\n      <div className=\"col-sm-12 col-md-12 col-lg-6 col-xl-6 tm-block-col\">\n        <div className=\"tm-bg-primary-dark tm-block tm-block-taller tm-block-overflow\">\n          <h2 className=\"tm-block-title\">Notification List</h2>\n          <div className=\"tm-notification-items\">{mapNotiArr}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\Orders\\Order.js",["121","122","123","124"],[],"import React, { Component } from \"react\";\nimport classes from \"./Order.module.css\";\n\nclass Order extends Component {\n  state = {\n    orderdata: [],\n  };\n  getorderdata = () => {\n    let orderlist =\n      localStorage.getItem(\"accountdata\") === null\n        ? []\n        : JSON.parse(localStorage.getItem(\"accountdata\"));\n    let orderlistdata = orderlist[\"dasbhoardPage\"][\"orders\"];\n    let orderdatamap = orderlistdata.map((item) => {\n      return this.displayorderdata(item);\n    });\n    return orderdatamap;\n  };\n  getstatusclasslink = (status) => {\n    switch (status) {\n      case \"Moving\":\n        return classes.moving;\n        break;\n      case \"Pending\":\n        return classes.Pending;\n        break;\n      case \"Cancelled\":\n        return classes.cancelled;\n        break;\n      case \"Delivered\":\n        return classes.delivered;\n        break;\n      default:\n    }\n  };\n  displayorderdata = (data) => {\n    let className = this.getstatusclasslink(data.status);\n    return (\n      <tr>\n        <th className={classes.thbdy}>\n          <b>{data.orderNo}</b>\n        </th>\n        <td className={classes.thbdy}>\n          <div className={className}></div>\n          {data.status}\n        </td>\n        <td className={classes.thbdy}>\n          <b>{data.operators}</b>\n        </td>\n        <td className={classes.thbdy}>\n          <b>{data.location}</b>\n        </td>\n        <td className={classes.thbdy}>\n          <b>{data.distance}</b>\n        </td>\n        <td className={classes.thbdy}>{data.startDate}</td>\n        <td className={classes.thbdy}>{data.deliveryDate}</td>\n      </tr>\n    );\n  };\n  render() {\n    return (\n      <div>\n        <h2 className={classes.tm_block_title}>Orders List</h2>\n        <table className={classes.table}>\n          <thead className={classes.thead}>\n            <tr className={classes.tbody}>\n              <th className={classes.thbdy}>ORDER NO.</th>\n              <th className={classes.thbdy}>STATUS</th>\n              <th className={classes.thbdy}>OPERATORS</th>\n              <th className={classes.thbdy}>LOCATION</th>\n              <th className={classes.thbdy}>DISTANCE</th>\n              <th className={classes.thbdy}>START DATE</th>\n              <th className={classes.thbdy}>EST DELIVERY DUE</th>\n            </tr>\n          </thead>\n          <tbody className={classes.tbody}>{this.getorderdata()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","C:\\Users\\SHUBHAM\\Desktop\\Edyoda-ReactFinal-Assignmt\\src\\Component\\Category\\Category.js",["125"],[],"import React, { Component } from \"react\";\nimport \"./Category.css\";\n\nexport class Category extends Component {\n  state = {\n    CategoryList: JSON.parse(localStorage.getItem(\"accountdata\")).productsPage\n      .categories,\n  };\n\n  deleteCategory = (pos) => {\n    let restCategoryData = this.state.CategoryList.filter((item, index) => {\n      return pos !== index;\n    });\n\n    let updateArr = JSON.parse(localStorage.getItem(\"accountdata\"));\n\n    updateArr.productsPage.categories = restCategoryData;\n    localStorage.setItem(\"accountdata\", JSON.stringify(updateArr));\n    this.setState({ CategoryList: restCategoryData });\n  };\n\n  render() {\n    const mapCategoryList = this.state.CategoryList.map((category, index) => {\n      return (\n        <tr key={index}>\n          <td className=\"tm-product-name\">{category.item}</td>\n          <td className=\"text-center\">\n            <a href=\"#\" className=\"tm-product-delete-link\">\n              <i\n                onClick={() => {\n                  this.deleteCategory(index);\n                }}\n                className=\"far fa-trash-alt tm-product-delete-icon\"\n              ></i>\n            </a>\n          </td>\n        </tr>\n      );\n    });\n    return (\n      <div className=\"col-sm-12 col-md-12 col-lg-4 col-xl-4 tm-block-col\">\n        <div className=\"tm-bg-primary-dark tm-block tm-block-product-categories\">\n          <h2 className=\"tm-block-title\">Product Categories</h2>\n          <div className=\"tm-product-table-container\">\n            <table className=\"table tm-table-small tm-product-table\">\n              <tbody>{mapCategoryList}</tbody>\n            </table>\n          </div>\n          <button className=\"btn btn-primary btn-block text-uppercase mb-3\">\n            Add new category\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n",{"ruleId":"126","severity":1,"message":"127","line":7,"column":32,"nodeType":"128","messageId":"129","endLine":7,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":11,"column":5,"nodeType":"132","messageId":"133","endLine":11,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"134","line":4,"column":7,"nodeType":"128","messageId":"129","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":251,"column":21,"nodeType":"137","endLine":251,"endColumn":78},{"ruleId":"138","severity":1,"message":"139","line":25,"column":22,"nodeType":"140","messageId":"141","endLine":25,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":29,"column":30,"nodeType":"144","messageId":"145","endLine":29,"endColumn":32},{"ruleId":"146","severity":1,"message":"147","line":48,"column":30,"nodeType":"148","messageId":"149","endLine":48,"endColumn":32},{"ruleId":"150","severity":1,"message":"151","line":89,"column":11,"nodeType":"137","endLine":93,"endColumn":12},{"ruleId":"126","severity":1,"message":"152","line":21,"column":9,"nodeType":"128","messageId":"129","endLine":21,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":20,"column":13,"nodeType":"137","endLine":20,"endColumn":81},{"ruleId":"155","severity":1,"message":"156","line":23,"column":9,"nodeType":"157","messageId":"158","endLine":23,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":26,"column":9,"nodeType":"157","messageId":"158","endLine":26,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":29,"column":9,"nodeType":"157","messageId":"158","endLine":29,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":32,"column":9,"nodeType":"157","messageId":"158","endLine":32,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":28,"column":13,"nodeType":"137","endLine":28,"endColumn":60},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'emailRegex' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Accountvalue' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode"]